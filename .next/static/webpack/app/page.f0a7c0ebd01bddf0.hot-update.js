"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-client)/./app/components/Hero/animations.js":
/*!*******************************************!*\
  !*** ./app/components/Hero/animations.js ***!
  \*******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   animateImage: function() { return /* binding */ animateImage; },\n/* harmony export */   animateTitle: function() { return /* binding */ animateTitle; },\n/* harmony export */   revealMenu: function() { return /* binding */ revealMenu; }\n/* harmony export */ });\n/* harmony import */ var gsap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! gsap */ \"(app-client)/./node_modules/gsap/index.js\");\n\nconst animateTitle = ()=>{\n    const tl = gsap__WEBPACK_IMPORTED_MODULE_0__.gsap.timeline({\n        defaults: {\n            ease: \"expo.out\",\n            duration: 2\n        }\n    });\n    tl.to(\"[data-hero-line]\", {\n        scaleX: 1\n    }).fromTo(\"[data-title-first]\", {\n        x: 100,\n        autoAlpha: 0\n    }, {\n        x: 0,\n        autoAlpha: 1\n    }, \"<15%\").fromTo(\"[data-title-last]\", {\n        x: -100,\n        autoAlpha: 0\n    }, {\n        x: 0,\n        autoAlpha: 1\n    }, \"<\");\n    return tl;\n};\nconst animateImage = ()=>{\n    const tl = gsap__WEBPACK_IMPORTED_MODULE_0__.gsap.timeline({\n        defaults: {\n            ease: \"expo.out\",\n            duration: 1.5\n        }\n    });\n    tl.to(\"[data-image-overlay]\", {\n        scaleY: 1\n    }).from(\"[data-image]\", {\n        yPercent: 100\n    }, \"<\").to(\"[data-image-overlay]\", {\n        scaleY: 0,\n        transformOrigin: \"top center\"\n    }).from(\"[data-image]\", {\n        duration: 2,\n        scale: 1.3\n    }, \"<\");\n    return tl;\n};\nconst revealMenu = ()=>{\n    const tl = gsap__WEBPACK_IMPORTED_MODULE_0__.gsap.timeline();\n    return tl;\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1jbGllbnQpLy4vYXBwL2NvbXBvbmVudHMvSGVyby9hbmltYXRpb25zLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBNEI7QUFFckIsTUFBTUMsZUFBZTtJQUMxQixNQUFNQyxLQUFLRixzQ0FBSUEsQ0FBQ0csU0FBUztRQUN2QkMsVUFBVTtZQUNSQyxNQUFNO1lBQ05DLFVBQVU7UUFDWjtJQUNGO0lBRUFKLEdBQUdLLEdBQUcsb0JBQW9CO1FBQ3hCQyxRQUFRO0lBQ1YsR0FDR0MsT0FDQyxzQkFDQTtRQUNFQyxHQUFHO1FBQ0hDLFdBQVc7SUFDYixHQUNBO1FBQ0VELEdBQUc7UUFDSEMsV0FBVztJQUNiLEdBQ0EsUUFFREYsT0FDQyxxQkFDQTtRQUNFQyxHQUFHLENBQUM7UUFDSkMsV0FBVztJQUNiLEdBQ0E7UUFDRUQsR0FBRztRQUNIQyxXQUFXO0lBQ2IsR0FDQTtJQUdKLE9BQU9UO0FBQ1QsRUFBRTtBQUVLLE1BQU1VLGVBQWU7SUFDMUIsTUFBTVYsS0FBS0Ysc0NBQUlBLENBQUNHLFNBQVM7UUFDdkJDLFVBQVU7WUFDUkMsTUFBTTtZQUNOQyxVQUFVO1FBQ1o7SUFDRjtJQUVBSixHQUFHSyxHQUFHLHdCQUF3QjtRQUM1Qk0sUUFBUTtJQUNWLEdBQ0dDLEtBQ0MsZ0JBQ0E7UUFDRUMsVUFBVTtJQUNaLEdBQ0EsS0FFRFIsR0FBRyx3QkFBd0I7UUFDMUJNLFFBQVE7UUFDUkcsaUJBQWlCO0lBQ25CLEdBQ0NGLEtBQ0MsZ0JBQ0E7UUFDRVIsVUFBVTtRQUNWVyxPQUFPO0lBQ1QsR0FDQTtJQUdKLE9BQU9mO0FBQ1QsRUFBRTtBQUdLLE1BQU1nQixhQUFhO0lBQ3RCLE1BQU1oQixLQUFLRixzQ0FBSUEsQ0FBQ0c7SUFJaEIsT0FBT0Q7QUFDWCxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2FwcC9jb21wb25lbnRzL0hlcm8vYW5pbWF0aW9ucy5qcz85ZWQ1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdzYXAgfSBmcm9tIFwiZ3NhcFwiO1xyXG5cclxuZXhwb3J0IGNvbnN0IGFuaW1hdGVUaXRsZSA9ICgpID0+IHtcclxuICBjb25zdCB0bCA9IGdzYXAudGltZWxpbmUoe1xyXG4gICAgZGVmYXVsdHM6IHtcclxuICAgICAgZWFzZTogXCJleHBvLm91dFwiLFxyXG4gICAgICBkdXJhdGlvbjogMixcclxuICAgIH0sXHJcbiAgfSk7XHJcblxyXG4gIHRsLnRvKFwiW2RhdGEtaGVyby1saW5lXVwiLCB7XHJcbiAgICBzY2FsZVg6IDEsXHJcbiAgfSlcclxuICAgIC5mcm9tVG8oXHJcbiAgICAgIFwiW2RhdGEtdGl0bGUtZmlyc3RdXCIsXHJcbiAgICAgIHtcclxuICAgICAgICB4OiAxMDAsXHJcbiAgICAgICAgYXV0b0FscGhhOiAwLFxyXG4gICAgICB9LFxyXG4gICAgICB7XHJcbiAgICAgICAgeDogMCxcclxuICAgICAgICBhdXRvQWxwaGE6IDEsXHJcbiAgICAgIH0sXHJcbiAgICAgIFwiPDE1JVwiXHJcbiAgICApXHJcbiAgICAuZnJvbVRvKFxyXG4gICAgICBcIltkYXRhLXRpdGxlLWxhc3RdXCIsXHJcbiAgICAgIHtcclxuICAgICAgICB4OiAtMTAwLFxyXG4gICAgICAgIGF1dG9BbHBoYTogMCxcclxuICAgICAgfSxcclxuICAgICAge1xyXG4gICAgICAgIHg6IDAsXHJcbiAgICAgICAgYXV0b0FscGhhOiAxLFxyXG4gICAgICB9LFxyXG4gICAgICBcIjxcIlxyXG4gICAgKTtcclxuXHJcbiAgcmV0dXJuIHRsO1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IGFuaW1hdGVJbWFnZSA9ICgpID0+IHtcclxuICBjb25zdCB0bCA9IGdzYXAudGltZWxpbmUoe1xyXG4gICAgZGVmYXVsdHM6IHtcclxuICAgICAgZWFzZTogXCJleHBvLm91dFwiLFxyXG4gICAgICBkdXJhdGlvbjogMS41LFxyXG4gICAgfSxcclxuICB9KTtcclxuXHJcbiAgdGwudG8oXCJbZGF0YS1pbWFnZS1vdmVybGF5XVwiLCB7XHJcbiAgICBzY2FsZVk6IDEsXHJcbiAgfSlcclxuICAgIC5mcm9tKFxyXG4gICAgICBcIltkYXRhLWltYWdlXVwiLFxyXG4gICAgICB7XHJcbiAgICAgICAgeVBlcmNlbnQ6IDEwMCxcclxuICAgICAgfSxcclxuICAgICAgXCI8XCJcclxuICAgIClcclxuICAgIC50byhcIltkYXRhLWltYWdlLW92ZXJsYXldXCIsIHtcclxuICAgICAgc2NhbGVZOiAwLFxyXG4gICAgICB0cmFuc2Zvcm1PcmlnaW46IFwidG9wIGNlbnRlclwiLFxyXG4gICAgfSlcclxuICAgIC5mcm9tKFxyXG4gICAgICBcIltkYXRhLWltYWdlXVwiLFxyXG4gICAgICB7XHJcbiAgICAgICAgZHVyYXRpb246IDIsXHJcbiAgICAgICAgc2NhbGU6IDEuMyxcclxuICAgICAgfSxcclxuICAgICAgXCI8XCJcclxuICAgICk7XHJcblxyXG4gIHJldHVybiB0bDtcclxufTtcclxuXHJcblxyXG5leHBvcnQgY29uc3QgcmV2ZWFsTWVudSA9ICgpID0+IHtcclxuICAgIGNvbnN0IHRsID0gZ3NhcC50aW1lbGluZSgpXHJcblxyXG4gICAgXHJcblxyXG4gICAgcmV0dXJuIHRsO1xyXG59Il0sIm5hbWVzIjpbImdzYXAiLCJhbmltYXRlVGl0bGUiLCJ0bCIsInRpbWVsaW5lIiwiZGVmYXVsdHMiLCJlYXNlIiwiZHVyYXRpb24iLCJ0byIsInNjYWxlWCIsImZyb21UbyIsIngiLCJhdXRvQWxwaGEiLCJhbmltYXRlSW1hZ2UiLCJzY2FsZVkiLCJmcm9tIiwieVBlcmNlbnQiLCJ0cmFuc2Zvcm1PcmlnaW4iLCJzY2FsZSIsInJldmVhbE1lbnUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-client)/./app/components/Hero/animations.js\n"));

/***/ })

});